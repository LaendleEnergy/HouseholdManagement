version: "3.8"

services:
  delayservice:
    image: busybox
    command: >
      sh -c "echo 'Delaying household-management startup for 60 seconds, waiting for database to be ready...'; sleep 60; echo 'Delay complete.'"
  householdmanagement:
    container_name: household_management
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile
    ports:
      - "8081:9000"
    networks:
      - front-tier
      - back-tier
    depends_on:
      database:
        condition: service_healthy
      delayservice:
        condition: service_completed_successfully
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://database:5433/quarkus
      - QUARKUS_DATASOURCE_USERNAME=quarkus
      - QUARKUS_DATASOURCE_PASSWORD=quarkus
      - QUARKUS_HTTP_PORT=9000
      - QUARKUS_REDIS_HOST=redis://127.0.0.1:6379
  database:
    container_name: database
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=quarkus
      - POSTGRES_USER=quarkus
      - POSTGRES_PASSWORD=quarkus
      - PGUSER=quarkus
      - POSTGRES_URL="postgres://quarkus:quarkus@postgres:5433/quarkus"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - back-tier
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "quarkus", "-u", "quarkus"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 5

  accountmanagement:
    container_name: account_management
    build: "C:\Users\Bianca\Informatik-Studium\Master\Semester_3\Projekt\AccountManagement"
    ports:
     - "8080:9000"
    depends_on:
      - redis-stack

  redis-stack:
    container_name: redis-stack
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
      - "8001:8001"
    restart: on-failure

networks:
  front-tier:
    name: front-tier
  back-tier:
    name: back-tier